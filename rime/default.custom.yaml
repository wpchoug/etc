patch:
  schema_list:
    - schema: luna_pinyin
    - schema: luna_pinyin_simp
    - schema: double_pinyin_abc
    - schema: wubi86
    - schema: blg_tai
  menu:
    page_size: 5
  punctuator:
    full_shape:
      " ": {commit: "　"}
      "!": {commit: "！"}
      "\"": {pair: ["“", "”"]}
      "#": ["＃", "⌘"]
      "$": ["￥", "$", "€", "£", "¥", "¢", "¤"]
      "%": ["％", "°", "℃"]
      "&": "＆"
      "'": {pair: ["‘", "’"]}
      "(": "（"
      ")": "）"
      "*": ["＊", "·", "・", "×", "※", "❂"]
      "+": "＋"
      ",": {commit: "，"}
      "-": "－"
      .: {commit: "。"}
      "/": ["／", "÷"]
      ":": {commit: "："}
      ";": {commit: "；"}
      "<": ["《", "〈", "«", "‹"]
      "=": "＝"
      ">": ["》", "〉", "»", "›"]
      "?": {commit: "？"}
      "@": ["＠", "☯"]
      "[": ["「", "【", "〔", "［"]
      "\\": ["、", "＼"]
      "]": ["」", "】", "〕", "］"]
      "^": {commit: "……"}
      _: "——"
      "`": "｀"
      "{": ["『", "〖", "｛"]
      "|": ["·", "｜", "§", "¦"]
      "}": ["』", "〗", "｝"]
      "~": "～"
    half_shape:
      "!": {commit: "！"}
      "\"": {pair: ["“", "”"]}
      "#": "#"
      "$": ["￥", "$", "€", "£", "¥", "¢", "¤"]
      "%": ["%", "％", "°", "℃"]
      "&": ["&", "#"]
      "'": {pair: ["‘", "’"]}
      "(": "（"
      ")": "）"
      "*": '*'
      "+": "+"
      ",": {commit: "，"}
      "-": "-"
      .: {commit: "。"}
      "/": '/'
      ":": {commit: "："}
      ";": {commit: "；"}
      "<": ["《", "〈", "«", "‹"]
      "=": "="
      ">": ["》", "〉", "»", "›"]
      "?": {commit: "？"}
      "@": "@"
      "[": ["「", "【", "〔", "［"]
      "\\": ["、", "\\", "＼"]
      "]": ["」", "】", "〕", "］"]
      "^": {commit: "……"}
      _: "——"
      "`": "`"
      "{": ["『", "〖", "｛"]
      "|": ["·", "|", "｜", "§", "¦"]
      "}": ["』", "〗", "｝"]
      "~": ["~", "～"]
  key_binder:
    bindings:
      # This is what I add
      - { when: composing, accept: Control+w, send: Escape }
      - { when: composing, accept: Tab, send: Return }
      - { when: composing, accept: 8, send: 2 }
      - { when: composing, accept: 9, send: 3 }
      - { when: composing, accept: 0, send: 4 }
      - { when: composing, accept: slash, send: 5}
      - { when: composing, accept: Control+t, send: 2 }
      - { when: composing, accept: Control+c, send: 3 }
      - { when: composing, accept: Control+n, send: 4 }
      - { when: composing, accept: Control+s, send: 5}
      # Emacs style
      - { when: composing, accept: Control+p, send: Up }
      #- { when: composing, accept: Control+n, send: Down }
      - { when: composing, accept: Control+b, send: Left }
      - { when: composing, accept: Control+f, send: Right }
      - { when: composing, accept: Control+a, send: Home }
      - { when: composing, accept: Control+e, send: End }
      - { when: composing, accept: Control+d, send: Delete }
      - { when: composing, accept: Control+k, send: Shift+Delete }
      - { when: composing, accept: Control+h, send: BackSpace }
      - { when: composing, accept: Control+g, send: Escape }
      - { when: composing, accept: Control+bracketleft, send: Escape }
      - { when: composing, accept: Alt+v, send: Page_Up }
      - { when: composing, accept: Control+v, send: Page_Down }
      # paging keys
      #- { when: composing, accept: ISO_Left_Tab, send: Page_Up }
      #- { when: composing, accept: Shift+Tab, send: Page_Up }
      #- { when: composing, accept: Tab, send: Page_Down }
      #- { when: has_menu, accept: minus, send: Page_Up }
      #- { when: has_menu, accept: equal, send: Page_Down }
      # hotkey switch
      - { when: always, accept: Control+Shift+1, select: .next }
      - { when: always, accept: Control+Shift+2, toggle: ascii_mode }
      - { when: always, accept: Control+Shift+3, toggle: full_shape }
      - { when: always, accept: Control+Shift+4, toggle: simplification }
      - { when: always, accept: Control+Shift+5, toggle: extended_charset }
      - { when: always, accept: Control+Shift+exclam, select: .next }
      - { when: always, accept: Control+Shift+at, toggle: ascii_mode }
      - { when: always, accept: Control+Shift+numbersign, toggle: full_shape }
      - { when: always, accept: Control+Shift+dollar, toggle: simplification }
      - { when: always, accept: Control+Shift+percent, toggle: extended_charset }
      - { when: always, accept: Shift+space, toggle: full_shape }
      #- { when: always, accept: Control+period, toggle: ascii_punct }
      #- { when: always, accept: Control+comma, select: .next}
  ascii_composer:
    good_old_caps_lock: true
    switch_key:
      Shift_L: noop
      Shift_R: noop
      Control_L: noop
      Control_R: noop
      Caps_Lock: clear
      Eisu_toggle: commit_text
